// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace easygenerator.AcceptanceTests.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("BuildExperience")]
    [NUnit.Framework.CategoryAttribute("BuildExperience")]
    public partial class BuildExperienceFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "BuildExperience.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "BuildExperience", "As an author I can build selected Experience,\r\nso I\'m able to download archived p" +
                    "ackage with content in form of HTML (with needed CSS, JS and media resources)\r\na" +
                    "nd then upload it unpacked to a web server.", ProgrammingLanguage.CSharp, new string[] {
                        "BuildExperience"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
testRunner.Given("clear data context", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Building status is shown after click on build button")]
        public virtual void BuildingStatusIsShownAfterClickOnBuildButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Building status is shown after click on build button", ((string[])(null)));
#line 10
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table1.AddRow(new string[] {
                        "Experience1",
                        "1"});
#line 11
testRunner.Given("publications are present in database", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table2.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 14
testRunner.Given("objectives are present in database", ((string)(null)), table2, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table3.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 17
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table3, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table4.AddRow(new string[] {
                        "Question11",
                        "1"});
            table4.AddRow(new string[] {
                        "Question12",
                        "2"});
#line 20
testRunner.Given("questions related to \'Objective11\' are present in database", ((string)(null)), table4, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text",
                        "isCorrect"});
            table5.AddRow(new string[] {
                        "AnswerOption11",
                        "true"});
            table5.AddRow(new string[] {
                        "AnswerOption12",
                        "false"});
#line 24
testRunner.Given("answer options related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table5, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text",
                        "isCorrect"});
            table6.AddRow(new string[] {
                        "AnswerOption11",
                        "true"});
            table6.AddRow(new string[] {
                        "AnswerOption12",
                        "false"});
#line 28
testRunner.Given("answer options related to \'Question12\' of \'Objective11\' are present in database", ((string)(null)), table6, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Explanation"});
            table7.AddRow(new string[] {
                        "Explanation11"});
            table7.AddRow(new string[] {
                        "Explanation12"});
#line 32
testRunner.Given("explanations related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table7, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Explanation"});
            table8.AddRow(new string[] {
                        "Explanation11"});
            table8.AddRow(new string[] {
                        "Explanation12"});
#line 36
testRunner.Given("explanations related to \'Question12\' of \'Objective11\' are present in database", ((string)(null)), table8, "Given ");
#line 40
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
testRunner.Then("status building is shown for publication list item with title \'Experience1\' on cl" +
                    "ick build", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Complete status is shown after build finished")]
        public virtual void CompleteStatusIsShownAfterBuildFinished()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Complete status is shown after build finished", ((string[])(null)));
#line 43
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table9.AddRow(new string[] {
                        "Experience1",
                        "1"});
#line 44
testRunner.Given("publications are present in database", ((string)(null)), table9, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table10.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 47
testRunner.Given("objectives are present in database", ((string)(null)), table10, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table11.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 50
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table11, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table12.AddRow(new string[] {
                        "Question11",
                        "1"});
#line 53
testRunner.Given("questions related to \'Objective11\' are present in database", ((string)(null)), table12, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text",
                        "isCorrect"});
            table13.AddRow(new string[] {
                        "AnswerOption11",
                        "true"});
            table13.AddRow(new string[] {
                        "AnswerOption12",
                        "false"});
#line 56
testRunner.Given("answer options related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table13, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Explanation"});
            table14.AddRow(new string[] {
                        "Explanation11"});
            table14.AddRow(new string[] {
                        "Explanation12"});
#line 60
testRunner.Given("explanations related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table14, "Given ");
#line 64
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
testRunner.And("click build publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
testRunner.Then("status complete is shown true for publication list item with title \'Experience1\' " +
                    "after build finished", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Failed status is shown after build failed")]
        public virtual void FailedStatusIsShownAfterBuildFailed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Failed status is shown after build failed", ((string[])(null)));
#line 69
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table15.AddRow(new string[] {
                        "Experience1",
                        "1"});
#line 70
testRunner.Given("publications are present in database", ((string)(null)), table15, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table16.AddRow(new string[] {
                        @"Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11",
                        "1"});
#line 73
testRunner.Given("objectives are present in database", ((string)(null)), table16, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table17.AddRow(new string[] {
                        @"Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11",
                        "1"});
#line 76
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table17, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table18.AddRow(new string[] {
                        "Question11",
                        "1"});
#line 79
testRunner.Given(@"questions related to 'Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11' are present in database", ((string)(null)), table18, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text",
                        "isCorrect"});
            table19.AddRow(new string[] {
                        "AnswerOption11",
                        "true"});
            table19.AddRow(new string[] {
                        "AnswerOption12",
                        "false"});
#line 82
testRunner.Given(@"answer options related to 'Question11' of 'Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11' are present in database", ((string)(null)), table19, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Explanation"});
            table20.AddRow(new string[] {
                        "Explanation11"});
            table20.AddRow(new string[] {
                        "Explanation12"});
#line 86
testRunner.Given(@"explanations related to 'Question11' of 'Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11Objective11' are present in database", ((string)(null)), table20, "Given ");
#line 90
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
testRunner.And("click build publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
testRunner.Then("status failed is shown true for publication list item with title \'Experience1\' af" +
                    "ter build finished", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Explanations are not required, build should succeed")]
        public virtual void ExplanationsAreNotRequiredBuildShouldSucceed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Explanations are not required, build should succeed", ((string[])(null)));
#line 95
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table21.AddRow(new string[] {
                        "Experience1",
                        "1"});
#line 96
testRunner.Given("publications are present in database", ((string)(null)), table21, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table22.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 99
testRunner.Given("objectives are present in database", ((string)(null)), table22, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table23.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 102
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table23, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table24.AddRow(new string[] {
                        "Question11",
                        "1"});
#line 105
testRunner.Given("questions related to \'Objective11\' are present in database", ((string)(null)), table24, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text",
                        "isCorrect"});
            table25.AddRow(new string[] {
                        "AnswerOption11",
                        "true"});
            table25.AddRow(new string[] {
                        "AnswerOption12",
                        "false"});
#line 108
testRunner.Given("answer options related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table25, "Given ");
#line 112
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 113
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
testRunner.And("click build publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
testRunner.Then("status complete is shown true for publication list item with title \'Experience1\' " +
                    "after build finished", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Answer options are not required, build should succeed")]
        public virtual void AnswerOptionsAreNotRequiredBuildShouldSucceed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Answer options are not required, build should succeed", ((string[])(null)));
#line 117
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table26.AddRow(new string[] {
                        "Experience1",
                        "1"});
#line 118
testRunner.Given("publications are present in database", ((string)(null)), table26, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table27.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 121
testRunner.Given("objectives are present in database", ((string)(null)), table27, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table28.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 124
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table28, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table29.AddRow(new string[] {
                        "Question11",
                        "1"});
#line 127
testRunner.Given("questions related to \'Objective11\' are present in database", ((string)(null)), table29, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Explanation"});
            table30.AddRow(new string[] {
                        "Explanation11"});
            table30.AddRow(new string[] {
                        "Explanation12"});
#line 130
testRunner.Given("explanations related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table30, "Given ");
#line 134
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 135
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
testRunner.And("click build publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
testRunner.Then("status complete is shown true for publication list item with title \'Experience1\' " +
                    "after build finished", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Build should succeed if some question is empty")]
        public virtual void BuildShouldSucceedIfSomeQuestionIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Build should succeed if some question is empty", ((string[])(null)));
#line 139
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table31.AddRow(new string[] {
                        "Experience1",
                        "1"});
#line 140
testRunner.Given("publications are present in database", ((string)(null)), table31, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table32.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 143
testRunner.Given("objectives are present in database", ((string)(null)), table32, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table33.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 146
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table33, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table34.AddRow(new string[] {
                        "Question11",
                        "1"});
            table34.AddRow(new string[] {
                        "Question12",
                        "2"});
#line 149
testRunner.Given("questions related to \'Objective11\' are present in database", ((string)(null)), table34, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text",
                        "isCorrect"});
            table35.AddRow(new string[] {
                        "AnswerOption11",
                        "true"});
            table35.AddRow(new string[] {
                        "AnswerOption12",
                        "false"});
#line 153
testRunner.Given("answer options related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table35, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Explanation"});
            table36.AddRow(new string[] {
                        "Explanation11"});
            table36.AddRow(new string[] {
                        "Explanation12"});
#line 157
testRunner.Given("explanations related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table36, "Given ");
#line 161
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 162
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
testRunner.And("click build publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
testRunner.Then("status complete is shown true for publication list item with title \'Experience1\' " +
                    "after build finished", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Build should succeed if some objective is empty")]
        public virtual void BuildShouldSucceedIfSomeObjectiveIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Build should succeed if some objective is empty", ((string[])(null)));
#line 166
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table37.AddRow(new string[] {
                        "Experience1",
                        "1"});
#line 167
testRunner.Given("publications are present in database", ((string)(null)), table37, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table38.AddRow(new string[] {
                        "Objective11",
                        "1"});
            table38.AddRow(new string[] {
                        "Objective12",
                        "2"});
#line 170
testRunner.Given("objectives are present in database", ((string)(null)), table38, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table39.AddRow(new string[] {
                        "Objective11",
                        "1"});
            table39.AddRow(new string[] {
                        "Objective12",
                        "2"});
#line 174
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table39, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table40.AddRow(new string[] {
                        "Question11",
                        "1"});
#line 178
testRunner.Given("questions related to \'Objective11\' are present in database", ((string)(null)), table40, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text",
                        "isCorrect"});
            table41.AddRow(new string[] {
                        "AnswerOption11",
                        "true"});
            table41.AddRow(new string[] {
                        "AnswerOption12",
                        "false"});
#line 181
testRunner.Given("answer options related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table41, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Explanation"});
            table42.AddRow(new string[] {
                        "Explanation11"});
            table42.AddRow(new string[] {
                        "Explanation12"});
#line 185
testRunner.Given("explanations related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table42, "Given ");
#line 189
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 190
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
testRunner.And("click build publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
testRunner.Then("status complete is shown true for publication list item with title \'Experience1\' " +
                    "after build finished", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Build should succeed even for empty experience")]
        public virtual void BuildShouldSucceedEvenForEmptyExperience()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Build should succeed even for empty experience", ((string[])(null)));
#line 194
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table43.AddRow(new string[] {
                        "Experience1",
                        "1"});
#line 195
testRunner.Given("publications are present in database", ((string)(null)), table43, "Given ");
#line 198
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 199
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
testRunner.And("click build publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
testRunner.Then("status complete is shown true for publication list item with title \'Experience1\' " +
                    "after build finished", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Open, select, rebuild and download actions become available after build on hover")]
        public virtual void OpenSelectRebuildAndDownloadActionsBecomeAvailableAfterBuildOnHover()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Open, select, rebuild and download actions become available after build on hover", ((string[])(null)));
#line 204
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table44.AddRow(new string[] {
                        "Experience1",
                        "1"});
#line 205
testRunner.Given("publications are present in database", ((string)(null)), table44, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table45.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 208
testRunner.Given("objectives are present in database", ((string)(null)), table45, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table46.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 211
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table46, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table47.AddRow(new string[] {
                        "Question11",
                        "1"});
#line 214
testRunner.Given("questions related to \'Objective11\' are present in database", ((string)(null)), table47, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text",
                        "isCorrect"});
            table48.AddRow(new string[] {
                        "AnswerOption11",
                        "true"});
            table48.AddRow(new string[] {
                        "AnswerOption12",
                        "false"});
#line 217
testRunner.Given("answer options related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table48, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Explanation"});
            table49.AddRow(new string[] {
                        "Explanation11"});
            table49.AddRow(new string[] {
                        "Explanation12"});
#line 221
testRunner.Given("explanations related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table49, "Given ");
#line 225
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 226
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
testRunner.And("click build publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
testRunner.And("sleep 1000 milliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
testRunner.Then("Action open is enabled true for publications list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 231
testRunner.And("Action select is enabled true for publications list item with title \'Experience1\'" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 232
testRunner.And("Action rebuild is enabled true for publications list item with title \'Experience1" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 233
testRunner.And("Action download is enabled true for publications list item with title \'Experience" +
                    "1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Open, select, rebuild and download actions are available after rebuild on hover")]
        public virtual void OpenSelectRebuildAndDownloadActionsAreAvailableAfterRebuildOnHover()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Open, select, rebuild and download actions are available after rebuild on hover", ((string[])(null)));
#line 235
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table50.AddRow(new string[] {
                        "Experience1",
                        "1"});
#line 236
testRunner.Given("publications are present in database", ((string)(null)), table50, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table51.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 239
testRunner.Given("objectives are present in database", ((string)(null)), table51, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table52.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 242
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table52, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table53.AddRow(new string[] {
                        "Question11",
                        "1"});
#line 245
testRunner.Given("questions related to \'Objective11\' are present in database", ((string)(null)), table53, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text",
                        "isCorrect"});
            table54.AddRow(new string[] {
                        "AnswerOption11",
                        "true"});
            table54.AddRow(new string[] {
                        "AnswerOption12",
                        "false"});
#line 248
testRunner.Given("answer options related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table54, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Explanation"});
            table55.AddRow(new string[] {
                        "Explanation11"});
            table55.AddRow(new string[] {
                        "Explanation12"});
#line 252
testRunner.Given("explanations related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table55, "Given ");
#line 256
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 257
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 258
testRunner.And("click build publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 259
testRunner.And("sleep 1000 milliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 260
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 261
testRunner.And("click rebuild publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 262
testRunner.And("sleep 1000 milliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 263
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
testRunner.Then("Action open is enabled true for publications list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 265
testRunner.And("Action select is enabled true for publications list item with title \'Experience1\'" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
testRunner.And("Action rebuild is enabled true for publications list item with title \'Experience1" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 267
testRunner.And("Action download is enabled true for publications list item with title \'Experience" +
                    "1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Rebuild should succeed if some objective is empty")]
        public virtual void RebuildShouldSucceedIfSomeObjectiveIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rebuild should succeed if some objective is empty", ((string[])(null)));
#line 269
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table56.AddRow(new string[] {
                        "Experience1",
                        "1"});
#line 270
testRunner.Given("publications are present in database", ((string)(null)), table56, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table57.AddRow(new string[] {
                        "Objective11",
                        "1"});
            table57.AddRow(new string[] {
                        "Objective12",
                        "2"});
#line 273
testRunner.Given("objectives are present in database", ((string)(null)), table57, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table58.AddRow(new string[] {
                        "Objective11",
                        "1"});
            table58.AddRow(new string[] {
                        "Objective12",
                        "2"});
#line 277
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table58, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table59.AddRow(new string[] {
                        "Question11",
                        "1"});
#line 281
testRunner.Given("questions related to \'Objective11\' are present in database", ((string)(null)), table59, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text",
                        "isCorrect"});
            table60.AddRow(new string[] {
                        "AnswerOption11",
                        "true"});
            table60.AddRow(new string[] {
                        "AnswerOption12",
                        "false"});
#line 284
testRunner.Given("answer options related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table60, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Explanation"});
            table61.AddRow(new string[] {
                        "Explanation11"});
            table61.AddRow(new string[] {
                        "Explanation12"});
#line 288
testRunner.Given("explanations related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table61, "Given ");
#line 292
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 293
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 294
testRunner.And("click build publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
testRunner.And("sleep 1000 milliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 296
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 297
testRunner.And("click rebuild publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 298
testRunner.Then("status complete is shown true for publication list item with title \'Experience1\' " +
                    "after build finished", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Rebuild should succeed if some question is empty")]
        public virtual void RebuildShouldSucceedIfSomeQuestionIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rebuild should succeed if some question is empty", ((string[])(null)));
#line 300
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table62.AddRow(new string[] {
                        "Experience1",
                        "1"});
#line 301
testRunner.Given("publications are present in database", ((string)(null)), table62, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table63.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 304
testRunner.Given("objectives are present in database", ((string)(null)), table63, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table64.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 307
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table64, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table65.AddRow(new string[] {
                        "Question11",
                        "1"});
            table65.AddRow(new string[] {
                        "Question12",
                        "2"});
#line 310
testRunner.Given("questions related to \'Objective11\' are present in database", ((string)(null)), table65, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text",
                        "isCorrect"});
            table66.AddRow(new string[] {
                        "AnswerOption11",
                        "true"});
            table66.AddRow(new string[] {
                        "AnswerOption12",
                        "false"});
#line 314
testRunner.Given("answer options related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table66, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Explanation"});
            table67.AddRow(new string[] {
                        "Explanation11"});
            table67.AddRow(new string[] {
                        "Explanation12"});
#line 318
testRunner.Given("explanations related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table67, "Given ");
#line 322
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 323
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 324
testRunner.And("click build publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 325
testRunner.And("sleep 1000 milliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 326
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 327
testRunner.And("click rebuild publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 328
testRunner.Then("status complete is shown true for publication list item with title \'Experience1\' " +
                    "after build finished", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Answer options are not required, rebuild should succeed")]
        public virtual void AnswerOptionsAreNotRequiredRebuildShouldSucceed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Answer options are not required, rebuild should succeed", ((string[])(null)));
#line 330
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table68.AddRow(new string[] {
                        "Experience1",
                        "1"});
#line 331
testRunner.Given("publications are present in database", ((string)(null)), table68, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table69.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 334
testRunner.Given("objectives are present in database", ((string)(null)), table69, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table70.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 337
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table70, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table71.AddRow(new string[] {
                        "Question11",
                        "1"});
#line 340
testRunner.Given("questions related to \'Objective11\' are present in database", ((string)(null)), table71, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Explanation"});
            table72.AddRow(new string[] {
                        "Explanation11"});
            table72.AddRow(new string[] {
                        "Explanation12"});
#line 343
testRunner.Given("explanations related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table72, "Given ");
#line 347
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 348
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
testRunner.And("click build publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
testRunner.And("sleep 1000 milliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 352
testRunner.And("click rebuild publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 353
testRunner.Then("status complete is shown true for publication list item with title \'Experience1\' " +
                    "after build finished", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Explanations are not required, rebuild should succeed")]
        public virtual void ExplanationsAreNotRequiredRebuildShouldSucceed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Explanations are not required, rebuild should succeed", ((string[])(null)));
#line 355
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table73.AddRow(new string[] {
                        "Experience1",
                        "1"});
#line 356
testRunner.Given("publications are present in database", ((string)(null)), table73, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table74.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 359
testRunner.Given("objectives are present in database", ((string)(null)), table74, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table75.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 362
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table75, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table76.AddRow(new string[] {
                        "Question11",
                        "1"});
#line 365
testRunner.Given("questions related to \'Objective11\' are present in database", ((string)(null)), table76, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text",
                        "isCorrect"});
            table77.AddRow(new string[] {
                        "AnswerOption11",
                        "true"});
            table77.AddRow(new string[] {
                        "AnswerOption12",
                        "false"});
#line 368
testRunner.Given("answer options related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table77, "Given ");
#line 372
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 373
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 374
testRunner.And("click build publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 375
testRunner.And("sleep 1000 milliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 376
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 377
testRunner.And("click rebuild publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 378
testRunner.Then("status complete is shown true for publication list item with title \'Experience1\' " +
                    "after build finished", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Building status is shown after click on rebuild button")]
        public virtual void BuildingStatusIsShownAfterClickOnRebuildButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Building status is shown after click on rebuild button", ((string[])(null)));
#line 380
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 381
testRunner.Given("clear data context", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table78.AddRow(new string[] {
                        "Experience1",
                        "1"});
#line 382
testRunner.Given("publications are present in database", ((string)(null)), table78, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table79.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 385
testRunner.Given("objectives are present in database", ((string)(null)), table79, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table80.AddRow(new string[] {
                        "Objective11",
                        "1"});
#line 388
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table80, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table81.AddRow(new string[] {
                        "Question11",
                        "1"});
            table81.AddRow(new string[] {
                        "Question12",
                        "2"});
#line 391
testRunner.Given("questions related to \'Objective11\' are present in database", ((string)(null)), table81, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text",
                        "isCorrect"});
            table82.AddRow(new string[] {
                        "AnswerOption11",
                        "true"});
            table82.AddRow(new string[] {
                        "AnswerOption12",
                        "false"});
#line 395
testRunner.Given("answer options related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table82, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text",
                        "isCorrect"});
            table83.AddRow(new string[] {
                        "AnswerOption11",
                        "true"});
            table83.AddRow(new string[] {
                        "AnswerOption12",
                        "false"});
#line 399
testRunner.Given("answer options related to \'Question12\' of \'Objective11\' are present in database", ((string)(null)), table83, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "Explanation"});
            table84.AddRow(new string[] {
                        "Explanation11"});
            table84.AddRow(new string[] {
                        "Explanation12"});
#line 403
testRunner.Given("explanations related to \'Question11\' of \'Objective11\' are present in database", ((string)(null)), table84, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Explanation"});
            table85.AddRow(new string[] {
                        "Explanation11"});
            table85.AddRow(new string[] {
                        "Explanation12"});
#line 407
testRunner.Given("explanations related to \'Question12\' of \'Objective11\' are present in database", ((string)(null)), table85, "Given ");
#line 411
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 412
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 413
testRunner.And("click build publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 414
testRunner.And("sleep 1000 milliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 415
testRunner.Then("status building is shown for publication list item with title \'Experience1\' on cl" +
                    "ick rebuild", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Same experience status is shown on both experience and experiences list pages")]
        public virtual void SameExperienceStatusIsShownOnBothExperienceAndExperiencesListPages()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Same experience status is shown on both experience and experiences list pages", ((string[])(null)));
#line 417
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table86.AddRow(new string[] {
                        "Experience1",
                        "1"});
            table86.AddRow(new string[] {
                        "Experience2",
                        "2"});
#line 418
testRunner.Given("publications are present in database", ((string)(null)), table86, "Given ");
#line 422
testRunner.When("open page by url \'http://localhost:5656/#/experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 423
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 424
testRunner.And("click build publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 425
testRunner.And("sleep 1000 milliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 426
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 427
testRunner.Then("Action rebuild is enabled true for publications list item with title \'Experience1" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 428
testRunner.And("Action download is enabled true for publications list item with title \'Experience" +
                    "1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 429
testRunner.When("click open publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 430
testRunner.Then("browser navigates to url \'http://localhost:5656/#experience/1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 431
testRunner.And("download action on experiance page is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 432
testRunner.And("rebuild action on experiance page is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 433
testRunner.When("click on next experience", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 434
testRunner.Then("browser navigates to url \'http://localhost:5656/#experience/2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 435
testRunner.When("click on build button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 436
testRunner.Then("download action on experiance page is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 437
testRunner.And("rebuild action on experiance page is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 438
testRunner.When("click on back to experiences", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 439
testRunner.Then("browser navigates to url \'http://localhost:5656/#experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 440
testRunner.When("mouse hover element of publications list with title \'Experience2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 441
testRunner.Then("Action rebuild is enabled true for publications list item with title \'Experience2" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 442
testRunner.And("Action download is enabled true for publications list item with title \'Experience" +
                    "2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
