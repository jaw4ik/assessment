// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace easygenerator.AcceptanceTests.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("RelateObjectiveToExperience")]
    [NUnit.Framework.CategoryAttribute("RelateObjectiveToExperience")]
    public partial class RelateObjectiveToExperienceFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "RelateObjectiveToExperience.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "RelateObjectiveToExperience", "As an author I want to update Experience by including/excluding learning objectiv" +
                    "es,\r\nso I can form learner\'s Experience more properly and build Experience only " +
                    "with needed Learning objectives.", ProgrammingLanguage.CSharp, new string[] {
                        "RelateObjectiveToExperience"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
testRunner.Given("clear data context", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table1.AddRow(new string[] {
                        "Experience1",
                        "00000000000000000000000000000001"});
            table1.AddRow(new string[] {
                        "Experience2",
                        "00000000000000000000000000000002"});
#line 9
testRunner.Given("publications are present in database", ((string)(null)), table1, "Given ");
#line 13
testRunner.When("open page by url \'http://localhost:5656/signin\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
testRunner.And("sign in as \'test\' user on sign in page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
testRunner.Then("browser navigates to url \'http://localhost:5656/\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Objective can be included to experience on experience page")]
        public virtual void ObjectiveCanBeIncludedToExperienceOnExperiencePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Objective can be included to experience on experience page", ((string[])(null)));
#line 17
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table2.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
#line 18
testRunner.Given("objectives are present in database", ((string)(null)), table2, "Given ");
#line 21
testRunner.When("open page by url \'http://localhost:5656/#/experience/0000000000000000000000000000" +
                    "0001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
testRunner.And("click on include button on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
testRunner.And("mouse hover element of related objectives list with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
testRunner.And("select related objective list item with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
testRunner.And("click on finish button on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table3.AddRow(new string[] {
                        "Objective1"});
#line 26
testRunner.Then("related objectives list contains only items with data", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Objective can be excluded from experience on experience page")]
        public virtual void ObjectiveCanBeExcludedFromExperienceOnExperiencePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Objective can be excluded from experience on experience page", ((string[])(null)));
#line 30
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table4.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table4.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
#line 31
testRunner.Given("objectives are present in database", ((string)(null)), table4, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table5.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table5.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
#line 35
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table5, "Given ");
#line 39
testRunner.When("open page by url \'http://localhost:5656/#/experience/0000000000000000000000000000" +
                    "0001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
testRunner.And("mouse hover element of related objectives list with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
testRunner.And("select related objective list item with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
testRunner.And("click on exclude button on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table6.AddRow(new string[] {
                        "Objective2"});
#line 43
testRunner.Then("related objectives list contains only items with data", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Exclude button is disabled if there are no selected objectives")]
        public virtual void ExcludeButtonIsDisabledIfThereAreNoSelectedObjectives()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Exclude button is disabled if there are no selected objectives", ((string[])(null)));
#line 47
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table7.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table7.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
#line 48
testRunner.Given("objectives are present in database", ((string)(null)), table7, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table8.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table8.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
#line 52
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table8, "Given ");
#line 56
testRunner.When("open page by url \'http://localhost:5656/#/experience/0000000000000000000000000000" +
                    "0001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
testRunner.Then("exclude button is enabled false on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 58
testRunner.When("mouse hover element of related objectives list with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
testRunner.And("select related objective list item with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
testRunner.And("select related objective list item with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
testRunner.Then("exclude button is enabled false on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Exclude button is enabled if one or more objectives are selected")]
        public virtual void ExcludeButtonIsEnabledIfOneOrMoreObjectivesAreSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Exclude button is enabled if one or more objectives are selected", ((string[])(null)));
#line 63
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table9.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table9.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
#line 64
testRunner.Given("objectives are present in database", ((string)(null)), table9, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table10.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table10.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
#line 68
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table10, "Given ");
#line 72
testRunner.When("open page by url \'http://localhost:5656/#/experience/0000000000000000000000000000" +
                    "0001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
testRunner.And("mouse hover element of related objectives list with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
testRunner.And("select related objective list item with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
testRunner.Then("exclude button is enabled true on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 76
testRunner.When("mouse hover element of related objectives list with title \'Objective2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
testRunner.And("select related objective list item with title \'Objective2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
testRunner.Then("exclude button is enabled true on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("More than one objective can be included to experience at a time")]
        public virtual void MoreThanOneObjectiveCanBeIncludedToExperienceAtATime()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("More than one objective can be included to experience at a time", ((string[])(null)));
#line 80
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table11.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table11.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
            table11.AddRow(new string[] {
                        "Objective3",
                        "00000000000000000000000000000003"});
#line 81
testRunner.Given("objectives are present in database", ((string)(null)), table11, "Given ");
#line 86
testRunner.When("open page by url \'http://localhost:5656/#/experience/0000000000000000000000000000" +
                    "0001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
testRunner.And("click on include button on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
testRunner.And("mouse hover element of related objectives list with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
testRunner.And("select related objective list item with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
testRunner.And("mouse hover element of related objectives list with title \'Objective3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
testRunner.And("select related objective list item with title \'Objective3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
testRunner.And("click on finish button on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table12.AddRow(new string[] {
                        "Objective1"});
            table12.AddRow(new string[] {
                        "Objective3"});
#line 93
testRunner.Then("related objectives list contains only items with data", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("More than one objective can be excluded from experience at a time")]
        public virtual void MoreThanOneObjectiveCanBeExcludedFromExperienceAtATime()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("More than one objective can be excluded from experience at a time", ((string[])(null)));
#line 98
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table13.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table13.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
            table13.AddRow(new string[] {
                        "Objective3",
                        "00000000000000000000000000000003"});
#line 99
testRunner.Given("objectives are present in database", ((string)(null)), table13, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table14.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table14.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
            table14.AddRow(new string[] {
                        "Objective3",
                        "00000000000000000000000000000003"});
#line 104
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table14, "Given ");
#line 109
testRunner.When("open page by url \'http://localhost:5656/#/experience/0000000000000000000000000000" +
                    "0001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 110
testRunner.And("mouse hover element of related objectives list with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
testRunner.And("select related objective list item with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
testRunner.And("mouse hover element of related objectives list with title \'Objective3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
testRunner.And("select related objective list item with title \'Objective3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
testRunner.And("click on exclude button on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table15.AddRow(new string[] {
                        "Objective2"});
#line 115
testRunner.Then("related objectives list contains only items with data", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Objectives already included to experience are not shown in include list")]
        public virtual void ObjectivesAlreadyIncludedToExperienceAreNotShownInIncludeList()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Objectives already included to experience are not shown in include list", ((string[])(null)));
#line 119
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table16.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table16.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
            table16.AddRow(new string[] {
                        "Objective3",
                        "00000000000000000000000000000003"});
            table16.AddRow(new string[] {
                        "Objective4",
                        "00000000000000000000000000000004"});
#line 120
testRunner.Given("objectives are present in database", ((string)(null)), table16, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table17.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table17.AddRow(new string[] {
                        "Objective3",
                        "00000000000000000000000000000003"});
#line 126
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table17, "Given ");
#line 130
testRunner.When("open page by url \'http://localhost:5656/#/experience/0000000000000000000000000000" +
                    "0001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
testRunner.And("click on include button on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table18.AddRow(new string[] {
                        "Objective2"});
            table18.AddRow(new string[] {
                        "Objective4"});
#line 132
testRunner.Then("related objectives list contains only items with data", ((string)(null)), table18, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Excluded objectives are not shown again after go out and back to experience view")]
        public virtual void ExcludedObjectivesAreNotShownAgainAfterGoOutAndBackToExperienceView()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Excluded objectives are not shown again after go out and back to experience view", ((string[])(null)));
#line 137
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table19.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table19.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
            table19.AddRow(new string[] {
                        "Objective3",
                        "00000000000000000000000000000003"});
#line 138
testRunner.Given("objectives are present in database", ((string)(null)), table19, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table20.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table20.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
            table20.AddRow(new string[] {
                        "Objective3",
                        "00000000000000000000000000000003"});
#line 143
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table20, "Given ");
#line 148
testRunner.When("open page by url \'http://localhost:5656/#/experience/0000000000000000000000000000" +
                    "0001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 149
testRunner.And("mouse hover element of related objectives list with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
testRunner.And("select related objective list item with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
testRunner.And("mouse hover element of related objectives list with title \'Objective3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
testRunner.And("select related objective list item with title \'Objective3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
testRunner.And("click on exclude button on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table21.AddRow(new string[] {
                        "Objective2"});
#line 154
testRunner.Then("related objectives list contains only items with data", ((string)(null)), table21, "Then ");
#line 157
testRunner.When("click on back to experiences", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 158
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
testRunner.And("click open publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
testRunner.Then("browser navigates to url \'http://localhost:5656/#experience/000000000000000000000" +
                    "00000000001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table22.AddRow(new string[] {
                        "Objective2"});
#line 161
testRunner.And("related objectives list contains only items with data", ((string)(null)), table22, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Included objectives are not shown after go back to include list again")]
        public virtual void IncludedObjectivesAreNotShownAfterGoBackToIncludeListAgain()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Included objectives are not shown after go back to include list again", ((string[])(null)));
#line 165
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table23.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table23.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
            table23.AddRow(new string[] {
                        "Objective3",
                        "00000000000000000000000000000003"});
            table23.AddRow(new string[] {
                        "Objective4",
                        "00000000000000000000000000000004"});
#line 166
testRunner.Given("objectives are present in database", ((string)(null)), table23, "Given ");
#line 172
testRunner.When("open page by url \'http://localhost:5656/#/experience/0000000000000000000000000000" +
                    "0001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 173
testRunner.And("click on include button on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
testRunner.And("mouse hover element of related objectives list with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
testRunner.And("select related objective list item with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
testRunner.And("mouse hover element of related objectives list with title \'Objective3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
testRunner.And("select related objective list item with title \'Objective3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
testRunner.And("click on finish button on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table24.AddRow(new string[] {
                        "Objective1"});
            table24.AddRow(new string[] {
                        "Objective3"});
#line 179
testRunner.Then("related objectives list contains only items with data", ((string)(null)), table24, "Then ");
#line 183
testRunner.When("click on include button on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table25.AddRow(new string[] {
                        "Objective2"});
            table25.AddRow(new string[] {
                        "Objective4"});
#line 184
testRunner.Then("related objectives list contains only items with data", ((string)(null)), table25, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Objectives already included to one experience can be included to another experien" +
            "ce")]
        public virtual void ObjectivesAlreadyIncludedToOneExperienceCanBeIncludedToAnotherExperience()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Objectives already included to one experience can be included to another experien" +
                    "ce", ((string[])(null)));
#line 189
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table26.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table26.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
            table26.AddRow(new string[] {
                        "Objective3",
                        "00000000000000000000000000000003"});
#line 190
testRunner.Given("objectives are present in database", ((string)(null)), table26, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table27.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table27.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
#line 195
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table27, "Given ");
#line 199
testRunner.When("open page by url \'http://localhost:5656/#/experience/0000000000000000000000000000" +
                    "0002\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 200
testRunner.And("click on include button on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table28.AddRow(new string[] {
                        "Objective1"});
            table28.AddRow(new string[] {
                        "Objective2"});
            table28.AddRow(new string[] {
                        "Objective3"});
#line 201
testRunner.Then("related objectives list contains only items with data", ((string)(null)), table28, "Then ");
#line 206
testRunner.When("mouse hover element of related objectives list with title \'Objective2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 207
testRunner.And("select related objective list item with title \'Objective2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 208
testRunner.And("mouse hover element of related objectives list with title \'Objective3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 209
testRunner.And("select related objective list item with title \'Objective3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
testRunner.And("click on finish button on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table29.AddRow(new string[] {
                        "Objective2"});
            table29.AddRow(new string[] {
                        "Objective3"});
#line 211
testRunner.Then("related objectives list contains only items with data", ((string)(null)), table29, "Then ");
#line 215
testRunner.When("click on back to experiences", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 216
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
testRunner.And("click open publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
testRunner.Then("browser navigates to url \'http://localhost:5656/#experience/000000000000000000000" +
                    "00000000001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table30.AddRow(new string[] {
                        "Objective1"});
            table30.AddRow(new string[] {
                        "Objective2"});
#line 219
testRunner.And("related objectives list contains only items with data", ((string)(null)), table30, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Objectives excluded from one experience are not excluded from another experience")]
        public virtual void ObjectivesExcludedFromOneExperienceAreNotExcludedFromAnotherExperience()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Objectives excluded from one experience are not excluded from another experience", ((string[])(null)));
#line 224
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table31.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table31.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
            table31.AddRow(new string[] {
                        "Objective3",
                        "00000000000000000000000000000003"});
#line 225
testRunner.Given("objectives are present in database", ((string)(null)), table31, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table32.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
            table32.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
#line 230
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table32, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table33.AddRow(new string[] {
                        "Objective2",
                        "00000000000000000000000000000002"});
            table33.AddRow(new string[] {
                        "Objective3",
                        "00000000000000000000000000000003"});
#line 234
testRunner.Given("objectives are linked to experiance \'Experience2\'", ((string)(null)), table33, "Given ");
#line 238
testRunner.When("open page by url \'http://localhost:5656/#/experience/0000000000000000000000000000" +
                    "0002\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 239
testRunner.When("mouse hover element of related objectives list with title \'Objective2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 240
testRunner.And("select related objective list item with title \'Objective2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 241
testRunner.And("click on exclude button on experience page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table34.AddRow(new string[] {
                        "Objective3"});
#line 242
testRunner.Then("related objectives list contains only items with data", ((string)(null)), table34, "Then ");
#line 245
testRunner.When("click on back to experiences", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 246
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 247
testRunner.And("click open publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 248
testRunner.Then("browser navigates to url \'http://localhost:5656/#experience/000000000000000000000" +
                    "00000000001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table35.AddRow(new string[] {
                        "Objective1"});
            table35.AddRow(new string[] {
                        "Objective2"});
#line 249
testRunner.And("related objectives list contains only items with data", ((string)(null)), table35, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Experience can not be deleted if it has related objectives")]
        public virtual void ExperienceCanNotBeDeletedIfItHasRelatedObjectives()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Experience can not be deleted if it has related objectives", ((string[])(null)));
#line 254
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table36.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
#line 255
testRunner.Given("objectives are present in database", ((string)(null)), table36, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table37.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
#line 258
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table37, "Given ");
#line 261
testRunner.When("open page by url \'http://localhost:5656/#experiences\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 262
testRunner.And("mouse hover element of publications list with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 263
testRunner.And("select publication list item with title \'Experience1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
testRunner.And("click on delete button on experiences list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
testRunner.Then("error notification is displayed true on experiences list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table38.AddRow(new string[] {
                        "Experience1"});
            table38.AddRow(new string[] {
                        "Experience2"});
#line 266
testRunner.And("publications tiles list consists of ordered items", ((string)(null)), table38, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Objective can not be deleted if it is included to some experience")]
        public virtual void ObjectiveCanNotBeDeletedIfItIsIncludedToSomeExperience()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Objective can not be deleted if it is included to some experience", ((string[])(null)));
#line 271
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table39.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
#line 272
testRunner.Given("objectives are present in database", ((string)(null)), table39, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Id"});
            table40.AddRow(new string[] {
                        "Objective1",
                        "00000000000000000000000000000001"});
#line 275
testRunner.Given("objectives are linked to experiance \'Experience1\'", ((string)(null)), table40, "Given ");
#line 278
testRunner.When("open page by url \'http://localhost:5656/#objectives\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 279
testRunner.And("mouse hover element of objectives list with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 280
testRunner.And("select objective list item with title \'Objective1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 281
testRunner.And("click on delete button on objectives list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 282
testRunner.Then("error notification is displayed true on objectives list page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table41.AddRow(new string[] {
                        "Objective1"});
#line 283
testRunner.And("objectives tiles list consists of ordered items", ((string)(null)), table41, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
