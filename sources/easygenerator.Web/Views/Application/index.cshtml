@using System.Configuration
@using System.Threading
@using System.Web.Optimization
@using easygenerator.Infrastructure
@using easygenerator.Web.Components
@using easygenerator.Web.Components.Configuration

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,colo=1">
    <meta name="viewport" content="width=640,maximum-scale=1.0">
    <meta name="description" content="">
    <title>easygenerator</title>

    @Styles.Render("~/Content/css")
    @Html.Partial("_mixpanelAnalytics")
    @Html.Partial("_nudgespotAnalytics")
    @Html.Partial("_intercomAnalytics")
    @Html.Partial("_sentryTracking")
</head>
<body>
    @Html.Partial("_googleTagManager")
    @if (BrowserSupport.IsSupportedDevice(HttpContext.Current.Request.UserAgent))
    {
        if (BrowserSupport.IsFullySupportedBrowser(HttpContext.Current.Request.UserAgent, HttpContext.Current.Request.Browser) || BrowserSupport.IsPartiallySupportedBrowser(HttpContext.Current.Request.UserAgent, HttpContext.Current.Request.Browser))
        {
            <div id="app" class="application">
                <div class="pulsar-loader align-center">
                    <div class="pulsar-loader-item"></div>
                    <div class="pulsar-loader-item"></div>
                    <div class="pulsar-loader-item"></div>
                </div>
            </div>
        }

        if (!BrowserSupport.IsFullySupportedBrowser(HttpContext.Current.Request.UserAgent, HttpContext.Current.Request.Browser))
        {
            @Html.Partial("notSupportedPage")
        }
    }
    else
    {
        @Html.Partial("notSupportedDevicePage")
    }

    <div id="crossProtocolStorageFrames"></div>

    @Scripts.Render("~/bundles/scripts/vendor")
    <script src="signalr/hubs"></script>

    <script type="text/javascript">
        var CKEDITOR_BASEPATH = '/Scripts/ckeditor/';
    </script>
    @Scripts.Render("~/bundles/scripts/ckeditor")
    <script type="text/javascript">
        CKEDITOR.timestamp = @DateTimeWrapper.InstanceStartTime.Ticks;
    </script>

    @if (Request.UserLanguages != null && Request.UserLanguages.Length > 0)
    {
        var userCultures = Request.UserLanguages.Select(l => l.Split(';')[0]).ToList();
        <script type="text/javascript">

            window.userCultures = [];
            window.appVersion = @DateTimeWrapper.InstanceStartTime.Ticks;
            window.BOMSymbol = '\ufeff';

            @for (var i = 0; i < userCultures.Count(); i++)
            {
                <text>window.userCultures.push('@userCultures[i]');</text>;
            }
        </script>
    }

    <script type="text/javascript">
        @helper AddConfigAppSettingToWindow(string settingKey, string windowKey = null)
        {
            if (!String.IsNullOrEmpty(ConfigurationManager.AppSettings[settingKey]))
            {
                    var key = String.IsNullOrEmpty(windowKey) ? @Char.ToLowerInvariant(settingKey[0]) + settingKey.Substring(1) : windowKey;
                    <text>window.@key = '@ConfigurationManager.AppSettings[settingKey]';</text>
            }
        }

        @AddConfigAppSettingToWindow("version", "egVersion")
        @AddConfigAppSettingToWindow("StorageServiceUrl")
        @AddConfigAppSettingToWindow("ConvertionServiceUrl")
        @AddConfigAppSettingToWindow("PlayerUrl")
        @AddConfigAppSettingToWindow("WinToWebConvertionServiceUrl")
        @AddConfigAppSettingToWindow("FroalaLicenseKey")
        
        @if ((ConfigurationManager.GetSection("surveyPopup") as SurveyPopupConfigurationSection) != null)
        {
            <text>
            window.surveyPopupOriginUrl = '@((ConfigurationManager.GetSection("surveyPopup") as SurveyPopupConfigurationSection).OriginUrl)';
            window.surveyPopupPageUrl = '@((ConfigurationManager.GetSection("surveyPopup") as SurveyPopupConfigurationSection).PageUrl)';
            </text>
        }

        @if ((ConfigurationManager.GetSection("coggno") as CoggnoConfigurationSection) != null)
        {
            <text>
                window.coggnoServiceUrl = '@((ConfigurationManager.GetSection("coggno") as CoggnoConfigurationSection).ServiceUrl)';
                window.coggnoServiceProviderUrl = '@((ConfigurationManager.GetSection("coggno") as CoggnoConfigurationSection).ServiceProviderUrl)';
            </text>
        }
    </script>

    @Scripts.Render("~/bundles/scripts/system")
    @Scripts.Render("~/bundles/scripts/system-configuration")

    <script type="text/javascript">
        //bootstraper
        (function() {
            window.auth.checkUserLogIn().then(function(isLoggedIn) {
                if (isLoggedIn || window.auth.isAuthTokenPresentInHash()) {
                    @if (HttpContext.Current.IsDebuggingEnabled)
                    {
                        <text>
                    System.cacheBust = '?v=' + Date.now();
                    </text>
                    }
                    else
                    {
                        <text>
                    System.config({
                        bundles: {
                            'main-built.js': ['main.js']
                        },
                        cacheBust: '?v=' + @DateTimeWrapper.InstanceStartTime.Ticks
                        });
                    </text>
                    }

                    System.import('main.js');
                }
                else {
                    var redirectUrl = '/signin';
                    var ltiUserInfoToken = window.auth.getLtiUserInfoTokenFromHash();
                    if (ltiUserInfoToken) {
                        redirectUrl += '#token.user.lti=' + encodeURIComponent(ltiUserInfoToken);
                    } else {
                        var samlIdPUserInfoToken = window.auth.getSamlIdPUserInfoTokenFromHash();
                        if (samlIdPUserInfoToken) {
                            redirectUrl += '#token.user.saml=' + encodeURIComponent(samlIdPUserInfoToken);
                        }
                    }
                    window.location.replace(redirectUrl);
                }
            });
        }());
    </script>

    @Html.Partial("_helpscoutBeacon")

</body>



</html>
