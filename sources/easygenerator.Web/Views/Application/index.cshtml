@using System.Configuration
@using System.Threading
@using System.Web.Optimization
@using easygenerator.Infrastructure
@using easygenerator.Web.Components

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,colo=1">
    <meta name="viewport" content="width=640,maximum-scale=1.0">
    <meta name="description" content="">
    <title>easygenerator</title>

    @Styles.Render("~/Content/css")
    @Html.Partial("_mixpanelAnalytics")
    @Html.Partial("_nudgespotAnalytics")
    @Html.Partial("_intercomAnalytics")
</head>
<body>
    @if (BrowserSupport.IsSupportedDevice(HttpContext.Current.Request.UserAgent))
    {
        if (BrowserSupport.IsFullySupportedBrowser(HttpContext.Current.Request.UserAgent, HttpContext.Current.Request.Browser) || BrowserSupport.IsPartiallySupportedBrowser(HttpContext.Current.Request.UserAgent, HttpContext.Current.Request.Browser))
        {
            <div id="app" class="application">
                <div class="pulsar-loader align-center">
                    <div class="pulsar-loader-item"></div>
                    <div class="pulsar-loader-item"></div>
                    <div class="pulsar-loader-item"></div>
                </div>
            </div>
        }

        if (!BrowserSupport.IsFullySupportedBrowser(HttpContext.Current.Request.UserAgent, HttpContext.Current.Request.Browser))
        {
            @Html.Partial("notSupportedPage")
        }
    }
    else
    {
        @Html.Partial("notSupportedDevicePage")
    }

    @Scripts.Render("~/bundles/scripts/vendor")
    <script src="signalr/hubs"></script>

    <script type="text/javascript">
        var CKEDITOR_BASEPATH = '/Scripts/ckeditor/';
    </script>
    @Scripts.Render("~/bundles/scripts/ckeditor")
    <script type="text/javascript">
        CKEDITOR.timestamp = @DateTimeWrapper.InstanceStartTime.Ticks;
    </script>

    @if (Request.UserLanguages != null && Request.UserLanguages.Length > 0)
    {
        var userCultures = Request.UserLanguages.Select(l => l.Split(';')[0]).ToList();
        <script type="text/javascript">

            window.userCultures = [];
            window.appVersion = @DateTimeWrapper.InstanceStartTime.Ticks;
            window.BOMSymbol = '\ufeff';

            @for (var i = 0; i < userCultures.Count(); i++)
            {
                <text>window.userCultures.push('@userCultures[i]');</text>;
            }
        </script>
    }
    
    <script type="text/javascript">
        @if (!String.IsNullOrEmpty(ConfigurationManager.AppSettings["version"]))
        {
            <text>
            window.egVersion = '@ConfigurationManager.AppSettings["version"]';
            </text>
        }
        @if (!String.IsNullOrEmpty(ConfigurationManager.AppSettings["StorageServiceUrl"]))
        {
            <text>
            window.storageServiceUrl = '@ConfigurationManager.AppSettings["StorageServiceUrl"]';
            </text>
        }
        @if (!String.IsNullOrEmpty(ConfigurationManager.AppSettings["ConvertionServiceUrl"]))
        {
            <text>
            window.convertionServiceUrl = '@ConfigurationManager.AppSettings["ConvertionServiceUrl"]';
            </text>
        }
        @if (!String.IsNullOrEmpty(ConfigurationManager.AppSettings["PlayerUrl"]))
        {
            <text>
            window.playerUrl = '@ConfigurationManager.AppSettings["PlayerUrl"]';
            </text>
        }
    </script>

    <script type="text/javascript" src="/Scripts/vendor/system.js"></script>
    <script type="text/javascript" src="/Scripts/system-hooks.js"></script>
    <script type="text/javascript" src="/config.js"></script>

    <script type="text/javascript">
        //bootstraper
        (function() {
            if (window.auth.isUserLoggedIn() || window.auth.isAuthTokenPresentInHash()) {
                @if (HttpContext.Current.IsDebuggingEnabled)
                {
                    <text>
                    System.cacheBust = '?v=' + Date.now();
                    </text>
                }
                else
                {
                    <text>
                    System.config({
                        bundles: {
                            'main-built': ['main']
                        },
                        cacheBust: '?v=' + @DateTimeWrapper.InstanceStartTime.Ticks
                    });
                    </text>
                }

                System.import('main');
            }
            else {
                window.location.replace('/signin');
            }
        }());
    </script>

</body>

</html>
