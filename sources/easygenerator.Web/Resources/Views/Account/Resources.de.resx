<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountAlreadyExists" xml:space="preserve">
    <value>Dieses Konto besteht bereits</value>
  </data>
  <data name="AnotherTool" xml:space="preserve">
    <value>Mit einem anderen Autorentool</value>
  </data>
  <data name="BeAtLeast7CharactersLong" xml:space="preserve">
    <value>mindestens 7 Zeichen lang sein;</value>
  </data>
  <data name="Checking" xml:space="preserve">
    <value>Überprüfung...</value>
  </data>
  <data name="ChooseAnswer" xml:space="preserve">
    <value>Antwort auswählen...</value>
  </data>
  <data name="ContainAtLeastOneDigit" xml:space="preserve">
    <value>mindestens eine Ziffer enthalten;</value>
  </data>
  <data name="ContainAtLeastOneLowerCaseLetter" xml:space="preserve">
    <value>mindestens einen Kleinbuchstaben enthalten;</value>
  </data>
  <data name="ContainAtLeastOneSpecialCharacter" xml:space="preserve">
    <value>mindestens ein Sonderzeichen enthalten;</value>
  </data>
  <data name="ContainAtLeastOneUpperCaseLetter" xml:space="preserve">
    <value>mindestens einen Großbuchstaben enthalten;</value>
  </data>
  <data name="CopyrightText" xml:space="preserve">
    <value>Copyright © 2013 easygenerator. Alle Rechte vorbehalten.</value>
  </data>
  <data name="CreateAccountTitle" xml:space="preserve">
    <value>Konto erstellen</value>
  </data>
  <data name="EmailCaption" xml:space="preserve">
    <value>E-Mail</value>
  </data>
  <data name="EnterValidEmailMessage" xml:space="preserve">
    <value>Geben Sie eine gültige E-Mail-Adresse ein</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>Fertig stellen</value>
  </data>
  <data name="FullNameCaption" xml:space="preserve">
    <value>Vollständiger Name</value>
  </data>
  <data name="HowAuthorTodayQuestion" xml:space="preserve">
    <value>Wie erstellen Sie heute Kurse?</value>
  </data>
  <data name="HowManyPeopleQuestion" xml:space="preserve">
    <value>Wie viele Personen in Ihrem Unternehmen erstellen Kurse?</value>
  </data>
  <data name="IncorrectEmailOrPassword" xml:space="preserve">
    <value>Diese Kombination von E-Mail-Adresse und Kennwort wurde nicht gefunden.</value>
  </data>
  <data name="JustLooking" xml:space="preserve">
    <value>Ich informiere mich nur</value>
  </data>
  <data name="LicenseAgreeCheckBoxTitle" xml:space="preserve">
    <value>Ich habe die folgenden &lt;a href="{0}"&gt;Nutzungsbedingungen&lt;/a&gt; und &lt;a href="{1}"&gt;Datenschutz&lt;/a&gt; gelesen und stimme ihnen zu</value>
  </data>
  <data name="NotContainWhitespaceCharacters" xml:space="preserve">
    <value>darf kein(e) Leerzeichen enthalten.</value>
  </data>
  <data name="Nothing" xml:space="preserve">
    <value>Keines</value>
  </data>
  <data name="Now" xml:space="preserve">
    <value>Jetzt</value>
  </data>
  <data name="OptionalInformation" xml:space="preserve">
    <value>Optionale Information</value>
  </data>
  <data name="OrganizationNameCaption" xml:space="preserve">
    <value>Name der Organisiation</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Sonstiges</value>
  </data>
  <data name="PasswordCaption" xml:space="preserve">
    <value>Kennwort</value>
  </data>
  <data name="PasswordDoesNotMeetRequirements" xml:space="preserve">
    <value>Das Kenntwort erfüllt nicht die Anforderungen</value>
  </data>
  <data name="PasswordIsStrongEnough" xml:space="preserve">
    <value>Das Kennwort ist stark genug</value>
  </data>
  <data name="PasswordRequirementsTitle" xml:space="preserve">
    <value>Das Kennwort muss:</value>
  </data>
  <data name="PhoneNumberCaption" xml:space="preserve">
    <value>Telefonnummer</value>
  </data>
  <data name="PowerPoint" xml:space="preserve">
    <value>PowerPoint</value>
  </data>
  <data name="PrivacyPolicy" xml:space="preserve">
    <value>Datenschutzrichtlinie</value>
  </data>
  <data name="RequiredInformation" xml:space="preserve">
    <value>Erforderliche Information</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Anmelden</value>
  </data>
  <data name="SignOutButton" xml:space="preserve">
    <value>Abmelden</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Registrieren</value>
  </data>
  <data name="SignUpButton" xml:space="preserve">
    <value>Registrieren</value>
  </data>
  <data name="Skip" xml:space="preserve">
    <value>Überspringen</value>
  </data>
  <data name="TermsOfUse" xml:space="preserve">
    <value>Nutzungsbedingungen</value>
  </data>
  <data name="TryImageDevelopOn" xml:space="preserve">
    <value>Entwickeln in</value>
  </data>
  <data name="TryImagePublishTo" xml:space="preserve">
    <value>Veröffentlichen in</value>
  </data>
  <data name="TryNow" xml:space="preserve">
    <value>Jetzt ausprobieren</value>
  </data>
  <data name="TrySubmitCaption" xml:space="preserve">
    <value>Probieren Sie es jetzt aus.</value>
  </data>
  <data name="TrySubtitle" xml:space="preserve">
    <value>Eine revolutionäre eLearning-Plattform</value>
  </data>
  <data name="TryTitle" xml:space="preserve">
    <value>&lt;b&gt;easygenerator&lt;/b&gt; - Einführung</value>
  </data>
  <data name="TryWarningMessage" xml:space="preserve">
    <value>Im Jetzt ausprobieren-Modus sind Ihre Inhalte nicht sicher!</value>
  </data>
  <data name="Variant1Month" xml:space="preserve">
    <value>In 1 - 3 Monaten</value>
  </data>
  <data name="VariantMore3Months" xml:space="preserve">
    <value>In mehr als 3 Monaten</value>
  </data>
  <data name="WhenDoYouNeedToolQuestion" xml:space="preserve">
    <value>Wie bald benötigen Sie ein Autorentool?</value>
  </data>
</root>