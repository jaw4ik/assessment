<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountAlreadyExists" xml:space="preserve">
    <value>This account already exists</value>
  </data>
  <data name="AnotherTool" xml:space="preserve">
    <value>Another authoring tool</value>
  </data>
  <data name="BeAtLeast7CharactersLong" xml:space="preserve">
    <value>be at least 7 characters long;</value>
  </data>
  <data name="Checking" xml:space="preserve">
    <value>Checking...</value>
  </data>
  <data name="ChooseAnswer" xml:space="preserve">
    <value>Choose answer...</value>
  </data>
  <data name="ChooseYourCountry" xml:space="preserve">
    <value>Choose your country...</value>
  </data>
  <data name="ContainAtLeastOneDigit" xml:space="preserve">
    <value>contain at least one digit;</value>
  </data>
  <data name="ContainAtLeastOneLowerCaseLetter" xml:space="preserve">
    <value>contain at least one lower case letter;</value>
  </data>
  <data name="ContainAtLeastOneSpecialCharacter" xml:space="preserve">
    <value>contain at least one special character;</value>
  </data>
  <data name="ContainAtLeastOneUpperCaseLetter" xml:space="preserve">
    <value>contain at least one upper case letter;</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="CouldNotVerifyPasswordRecovery" xml:space="preserve">
    <value>Sorry! We could not verify that this user requested a password reset. Please, initiate resetting procedure again.</value>
  </data>
  <data name="CountryCaption" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="CreateAccountTitle" xml:space="preserve">
    <value>Create account</value>
  </data>
  <data name="EmailCaption" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="EnterValidCountry" xml:space="preserve">
    <value>Fill in your country</value>
  </data>
  <data name="EnterValidEmailMessage" xml:space="preserve">
    <value>Enter a valid e-mail</value>
  </data>
  <data name="EnterValidFirstName" xml:space="preserve">
    <value>Fill in your first name</value>
  </data>
  <data name="EnterValidLastName" xml:space="preserve">
    <value>Fill in your last name</value>
  </data>
  <data name="EnterValidOrganization" xml:space="preserve">
    <value>Fill in your organization name</value>
  </data>
  <data name="EnterValidPhoneNumber" xml:space="preserve">
    <value>Fill in your phone number</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="FirstNameCaption" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="ForgotPasswordBody" xml:space="preserve">
    <value>&lt;div&gt;
	Hello,
	&lt;p&gt;Someone recently requested a password reset for your account at &lt;a href="{0}"&gt;{0}&lt;/a&gt;.&lt;/p&gt;
	&lt;p&gt;
		To reset the password please click on the link below:&lt;br /&gt;
		&lt;a href="{1}"&gt;{1}&lt;/a&gt;
	&lt;/p&gt;
	&lt;p&gt;
		If this is a mistake just ignore this e-mail - your password will not be changed. 
	&lt;/p&gt;
	&lt;p&gt;
		Thank you for using easygenerator.com and have a nice day!      
	&lt;/p&gt;
	&lt;strong&gt;--&lt;/strong&gt;&lt;br /&gt;
	&lt;strong&gt;Best regards,&lt;/strong&gt;&lt;br /&gt;
	&lt;strong&gt;easygenerator team&lt;/strong&gt;
&lt;/div&gt;</value>
  </data>
  <data name="ForgotPasswordSent" xml:space="preserve">
    <value>We have sent you an e-mail with instructions on how to reset
your password.</value>
  </data>
  <data name="ForgotPasswordSubject" xml:space="preserve">
    <value>Password reset on {0}</value>
  </data>
  <data name="FullNameCaption" xml:space="preserve">
    <value>Full name</value>
  </data>
  <data name="HidePassword" xml:space="preserve">
    <value>Hide password</value>
  </data>
  <data name="HowManyPeopleQuestion" xml:space="preserve">
    <value>How many people at your company are authoring courses?</value>
  </data>
  <data name="IncorrectEmailOrPassword" xml:space="preserve">
    <value>Such e-mail and password combination not found</value>
  </data>
  <data name="JustLooking" xml:space="preserve">
    <value>Just looking</value>
  </data>
  <data name="LastNameCaption" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="LicenseAgreeCheckBoxTitle" xml:space="preserve">
    <value>I have read and I agree to the &lt;a href="{0}"&gt;Terms&lt;/a&gt; and &lt;a href="{1}"&gt;Privacy policy&lt;/a&gt;</value>
  </data>
  <data name="NoSpaces" xml:space="preserve">
    <value>No spaces</value>
  </data>
  <data name="NotContainWhitespaceCharacters" xml:space="preserve">
    <value>NOT contain whitespace character(s).</value>
  </data>
  <data name="Nothing" xml:space="preserve">
    <value>Nothing</value>
  </data>
  <data name="NotLessThanSevenSymbols" xml:space="preserve">
    <value>Not less than 7 symbols</value>
  </data>
  <data name="Now" xml:space="preserve">
    <value>Now</value>
  </data>
  <data name="Numbers" xml:space="preserve">
    <value>Numbers</value>
  </data>
  <data name="OptionalInformation" xml:space="preserve">
    <value>Optional information</value>
  </data>
  <data name="OrganizationNameCaption" xml:space="preserve">
    <value>Organization name</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="PasswordCaption" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordDoesNotMeetRequirements" xml:space="preserve">
    <value>Password does not meet requirements</value>
  </data>
  <data name="PasswordIsStrongEnough" xml:space="preserve">
    <value>Password is strong enough</value>
  </data>
  <data name="PasswordRecovery" xml:space="preserve">
    <value>Password recovery</value>
  </data>
  <data name="PasswordRequirementsTitle" xml:space="preserve">
    <value>Password is required to:</value>
  </data>
  <data name="PhoneNumberCaption" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="PowerPoint" xml:space="preserve">
    <value>PowerPoint</value>
  </data>
  <data name="RequestError" xml:space="preserve">
    <value>An error was encountered while processing your request:</value>
  </data>
  <data name="RestorePasswordCaption" xml:space="preserve">
    <value>Enter your new password</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>show</value>
  </data>
  <data name="ShowPassword" xml:space="preserve">
    <value>Show password</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="SignOutButton" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="SignUpButton" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="Skip" xml:space="preserve">
    <value>Skip</value>
  </data>
  <data name="TryImageDevelopOn" xml:space="preserve">
    <value>Develop on</value>
  </data>
  <data name="TryImagePublishTo" xml:space="preserve">
    <value>Publish to</value>
  </data>
  <data name="TryNow" xml:space="preserve">
    <value>Try now</value>
  </data>
  <data name="TrySubmitCaption" xml:space="preserve">
    <value>Try it now</value>
  </data>
  <data name="TrySubtitle" xml:space="preserve">
    <value>A revolutionary eLearning platform</value>
  </data>
  <data name="TryTitle" xml:space="preserve">
    <value>Introducing &lt;b&gt;easygenerator&lt;/b&gt;</value>
  </data>
  <data name="TryWarningMessage" xml:space="preserve">
    <value>In Try It Now mode your content is not safe!</value>
  </data>
  <data name="UpperAndLowercaseLetters" xml:space="preserve">
    <value>Upper and lowercase letters</value>
  </data>
  <data name="Variant1Month" xml:space="preserve">
    <value>1-3 months</value>
  </data>
  <data name="VariantMore3Months" xml:space="preserve">
    <value>&gt;3 months</value>
  </data>
  <data name="WouldYouLikeAnIntroductionDemo" xml:space="preserve">
    <value>I would like an introduction demo!</value>
  </data>
  <data name="InviteCollaboratorBody" xml:space="preserve">
    <value>&lt;div&gt;
&lt;p&gt;{0} wants to work with you on an eLearning course being created in easygenerator.&lt;/p&gt;
&lt;p&gt;If you don’t have an easygenerator account, you can create one for free. Go to: &lt;a href="{1}"&gt;{1}&lt;/a&gt; and sign up with the same email address as in this mail ({2}) and the course will be available after login.&lt;/p&gt;
&lt;p&gt;Kind regards,&lt;br/&gt;easygenerator Team&lt;/p&gt;
&lt;/div&gt;</value>
  </data>
  <data name="InviteCollaboratorSubject" xml:space="preserve">
    <value>You’ve been invited to help {0} build an elearning course about {1}</value>
  </data>
  <data name="InviteCollaboratorFromDisplayName" xml:space="preserve">
    <value>{0} (easygenerator)</value>
  </data>
</root>